{"version":3,"file":"static/js/192.520d8383.chunk.js","mappings":"iOACA,EAA8B,iCAA9B,EAA8E,kCAA9E,EAA+H,kCAA/H,EAA8K,gC,2BCCjKA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAjB,EACpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EAGvBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACT,EAAgBI,IACjB,SAACF,EAAUG,GACT,OAAOH,EAASG,QAAO,qBAAGK,KACnBC,cAAcC,SAASP,EAAOM,cADd,GAGxB,I,kBCLY,SAASE,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,CACrCJ,KAAM,GACNK,MAAO,KAFT,eAAOC,EAAP,KAAgBC,EAAhB,KAIMC,GAAWC,EAAAA,EAAAA,MACXjB,GAAWkB,EAAAA,EAAAA,IAAYpB,GAEvBqB,EAAoB,SAAAC,GACxBL,GAAW,SAAAM,GAAI,yBAAUA,GAAV,cAAiBD,EAAEE,OAAOd,KAAOY,EAAEE,OAAOC,OAA1C,GAChB,EAuBD,OACE,kBAAMC,UAAWC,EAAiBC,SAtBf,SAAAN,GACnBA,EAAEO,iBACF,IAAMC,GAAKC,EAAAA,EAAAA,QAAO,GACC7B,EAAS8B,MAC1B,gBAAGtB,EAAH,EAAGA,KAAH,OACEM,EAAQN,MAAQM,EAAQN,KAAKC,gBAAkBD,EAAKC,aADtD,IAKAsB,MAAM,IAAD,OAAKjB,EAAQN,KAAb,+BAGLQ,GAASgB,EAAAA,EAAAA,IAAW,CAAEJ,GAAAA,EAAIpB,KAAMM,EAAQN,KAAMK,MAAOC,EAAQD,SAG/DE,EAAW,CACTP,KAAM,GACNK,MAAO,KAEV,EAGC,WACE,mBAAOW,UAAWC,EAAlB,UAAoC,QAElC,kBACED,UAAWC,EACXQ,KAAK,OACLzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRb,MAAOT,EAAQN,KACf6B,SAAUlB,QAGd,mBAAOK,UAAWC,EAAlB,UAAoC,SAElC,kBACED,UAAWC,EACXQ,KAAK,MACLzB,KAAK,QACL0B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRb,MAAOT,EAAQD,MACfwB,SAAUlB,QAGd,mBAAQK,UAAWC,EAAgBQ,KAAK,SAAxC,SAAiD,kBAKtD,C,aCzED,EAA0B,6BC8C1B,EArCoB,WAClB,IAAMjB,GAAWC,EAAAA,EAAAA,MACXjB,GAAWkB,EAAAA,EAAAA,IAAYZ,GACvBD,GAAYa,EAAAA,EAAAA,IAAYd,GAE9B,OACE,gCACGC,IAAa,SAACiC,EAAA,EAAD,KACd,yBACIjC,GACAL,EAASuC,KAAI,gBAAGX,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,KAAMK,EAAb,EAAaA,MAAb,OACX,0BACGL,EAAK,MAAIK,GACV,mBACEW,UAAWC,EACXQ,KAAK,SACLO,QAAS,kBAAMxB,GAASyB,EAAAA,EAAAA,IAAcb,GAA7B,EAHX,SAIC,aANMA,EADE,QAetB,E,SClCD,EAA8B,4BAA9B,EAAwE,4BC2BxE,EAtBe,WACb,IAAMZ,GAAWC,EAAAA,EAAAA,MACXyB,GAAcxB,EAAAA,EAAAA,IAAYhB,GAEhC,OACE,mBAAOsB,UAAWC,EAAlB,UAAmC,yBAEjC,kBACED,UAAWC,EACXQ,KAAK,OACLV,MAAOmB,EACPL,SAAU,SAAAjB,GAAC,OAAIJ,GAAS2B,EAAAA,EAAAA,GAAUvB,EAAEwB,cAAcrB,OAAvC,MAIlB,ECZc,SAASsB,IACtB,IAAM7B,GAAWC,EAAAA,EAAAA,MACXZ,GAAYa,EAAAA,EAAAA,IAAYd,GAM9B,OAJA0C,EAAAA,EAAAA,YAAU,WACR9B,GAAS+B,EAAAA,EAAAA,MACV,GAAE,CAAC/B,KAGF,iCACE,wBAAI,mBACJ,SAACL,EAAD,KACA,SAAC,EAAD,KACA,yBAAMN,IAAa,SAACiC,EAAA,EAAD,OACnB,SAAC,EAAD,MAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactFrom.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactLabel\":\"ContactForm_contactLabel__vt5it\",\"contactInput\":\"ContactForm_contactInput__z6XOX\",\"contactBtn\":\"ContactForm_contactBtn__Hbm5v\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nexport default function ContactForm() {\n  const [contact, setContact] = useState({\n    name: '',\n    phone: '',\n  });\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleInputChange = e => {\n    setContact(prev => ({ ...prev, [e.target.name]: e.target.value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const id = nanoid(5);\n    const queryMatch = contacts.find(\n      ({ name }) =>\n        contact.name && contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (queryMatch) {\n      alert(`\"${contact.name}\" is already in contacts.`);\n      return;\n    } else {\n      dispatch(addContact({ id, name: contact.name, phone: contact.phone }));\n    }\n\n    setContact({\n      name: '',\n      phone: '',\n    });\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label className={css.contactLabel}>\n        Name\n        <input\n          className={css.contactInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={contact.name}\n          onChange={handleInputChange}\n        />\n      </label>\n      <label className={css.contactLabel}>\n        Phone\n        <input\n          className={css.contactInput}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={contact.phone}\n          onChange={handleInputChange}\n        />\n      </label>\n      <button className={css.contactBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listBtn\":\"ContactList_listBtn__LNeu6\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  selectIsLoading,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\nimport Loader from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <ul>\n        {!isLoading &&\n          contacts.map(({ id, name, phone }) => (\n            <li key={id}>\n              {name} : {phone}\n              <button\n                className={css.listBtn}\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport PropTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input\n        className={css.filterInput}\n        type=\"text\"\n        value={filterValue}\n        onChange={e => dispatch(setFilter(e.currentTarget.value))}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm/ContactFrom';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Your contacts</h1>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && <Loader />}</div>\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectVisibleContacts","createSelector","name","toLowerCase","includes","ContactForm","useState","phone","contact","setContact","dispatch","useDispatch","useSelector","handleInputChange","e","prev","target","value","className","css","onSubmit","preventDefault","id","nanoid","find","alert","addContact","type","pattern","title","required","onChange","Loader","map","onClick","deleteContact","filterValue","setFilter","currentTarget","Tasks","useEffect","fetchContacts"],"sourceRoot":""}